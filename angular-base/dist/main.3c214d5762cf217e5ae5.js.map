{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/subcomponents/d3-view/d3-view.component.css","webpack:///./src/app/subcomponents/d3-view/d3-view.component.html","webpack:///./src/app/subcomponents/d3-view/d3-view.component.ts","webpack:///./src/environments/environment.dev.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+DAA+D,+H;;;;;;;;;;;ACA/D,gP;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,QAAQ,CAAC;IACnB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEe;AACT;AAC6B;AAc5E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wFAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnBtB,2BAA2B,oBAAoB,uBAAuB,KAAK,+CAA+C,2X;;;;;;;;;;;ACA1H,uE;;;;;;;;;;;;;;;;;;ACAkD;AAC1B;AAQxB;IAEE;QA+BQ,aAAQ,GAAG;YAEjB,IAAM,QAAQ,GAAG,GAAG,CAAC;YACpB,IAAM,MAAM,GAAa;gBACvB,CAAC,EAAC,CAAC;aACJ;YACD,MAAM;YACP,IAAM,GAAG,GAAoB,EAAE,CAAC;YAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAE,EAAE;gBAClC,GAAG,CAAC,IAAI,CACN;oBACE,GAAG,EAAE,CAAC;oBACN,CAAC,EAAE,EAAE,GAAG,CAAC;oBACT,CAAC,EAAE,CAAC;oBACJ,KAAK,EAAE,EAAE;oBACT,KAAK,EAAE,EAAE;iBACV,CAAC;aACL;YACD,OAAO,GAAG,CAAC;QACb,CAAC;IAlDe,CAAC;IAEjB,kCAAQ,GAAR;QACE,IAAM,UAAU,GAAoB,IAAI,CAAC,QAAQ,EAAE;QACnD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAExB,IAAM,OAAO,GAAG,SAAS,CAAC;QAC1B,IAAM,SAAS,GAAG,yCAAS,CAAC,MAAI,OAAS,CAAC;aACzC,MAAM,CAAC,KAAK,CAAC;aACb,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;aACrB,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC;QAEvB,IAAI,SAAS,GAAG,SAAS;YACvB,qBAAqB;YACrB,4BAA4B;YAC5B,kBAAkB;YAElB,kCAAkC;YAClC,kCAAkC;YAClC,uBAAuB;YACvB,oCAAoC;YACpC,qCAAqC;aACtC,SAAS,CAAC,SAAS,CAAC;aACpB,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE;aACxB,MAAM,CAAC,SAAS,CAAC;aACjB,IAAI,CAAC,QAAQ,EAAE,WAAC;YACf,OAAU,CAAC,GAAC,CAAC,CAAC,CAAC,YAAM,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,EAAE,aAAM,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,EAAE,aAAO,CAAC,GAAC,CAAC,CAAC,CAAC,SAAM;QAC/D,CAAC,CAAC;aACD,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;IACtB,CAAC;IA/BU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,uHAAuC;;SAExC,CAAC;;OACW,eAAe,CAsD3B;IAAD,sBAAC;CAAA;AAtD2B;AAyD5B,mEAAmE;AACnE,2BAA2B;AAC3B,gBAAgB;AAChB,mBAAmB;AACnB,WAAW;AACX,QAAQ;AACR,UAAU;;;;;;;;;;;;;ACxEV;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACgB;AAE7D,IAAI,yEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.3c214d5762cf217e5ae5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    PI Viewer Sample App\\n  </h1>\\n  <app-d3-view>\\n    \\n  </app-d3-view>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sample';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { D3ViewComponent } from './subcomponents/d3-view/d3-view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    D3ViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"d3-view {\\r\\n    width: 100%;\\r\\n    height: 1000px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3ViY29tcG9uZW50cy9kMy12aWV3L2QzLXZpZXcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvc3ViY29tcG9uZW50cy9kMy12aWV3L2QzLXZpZXcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImQzLXZpZXcge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMDBweDtcclxufSJdfQ== */\"","module.exports = \"\\n\\n<div id=\\\"d3-view\\\" class=\\\"d3-view\\\">\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport * as d3 from \"d3\"\nimport { gridItem } from '../../app-interfaces'\n\n@Component({\n  selector: 'app-d3-view',\n  templateUrl: './d3-view.component.html',\n  styleUrls: ['./d3-view.component.css']\n})\nexport class D3ViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    const sampleGrid: Array<gridItem> = this._getGrid()\n    console.log(sampleGrid);\n\n    const chartId = 'd3-view';\n    const selection = d3.select(`#${chartId}`)\n    .append('svg')\n    .attr('width', '100%')\n    .attr('height', '100%')\n    \n    var enterData = selection\n      // .selectAll('rect')\n      // .data(sampleGrid).enter()\n      // .append('rect')\n\n      // .attr('x', d => { return d.x })\n      // .attr('y', d => { return d.y })\n      // .attr('fill', 'red')\n      // .attr('width', d => { return 2 })\n      // .attr('height', d => { return 2 })\n    .selectAll('polygon')\n    .data(sampleGrid).enter()\n    .append('polygon')\n    .attr('points', d=>{\n      return `${5*d.x},0 ${5*d.x+10},0 ${5*d.x+10},10 ${5*d.x},10 ` \n    })\n    .attr('fill', 'red')\n  }\n\n  private _getGrid = (): Array<gridItem> => {\n\n    const gridSize = 100;\n     const gridit: gridItem = {\n       x:2\n     }\n     gridit\n    const ret: Array<gridItem> = [];\n    for (let i = 0; i <= gridSize; i++) {\n      ret.push(\n        {\n          val: i,\n          x: 10 * i,\n          y: 0,\n          gridX: 10,\n          gridY: 10\n        })\n    }\n    return ret;\n  }\n\n}\n\n\n// return [1, 2, 3, 4, 5].reduce<Array<gridItem>>((accum, val) => {\n//   return accum.concat([{\n//     val: val,\n//     x: 10 * val,\n//     y: 0\n//   }])\n// }, []);","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment.dev';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}